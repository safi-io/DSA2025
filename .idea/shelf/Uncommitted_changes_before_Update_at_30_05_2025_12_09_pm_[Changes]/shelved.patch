Index: src/ElevenGraphs/Creation/UndirectedUnweightedGraphAdjacencyList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ElevenGraphs.Creation;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashSet;\r\nimport java.util.LinkedList;\r\nimport java.util.Queue;\r\n\r\n\r\npublic class UndirectedUnweightedGraphAdjacencyList { // O(V+E)\r\n    public static void main(String[] args) {\r\n        int V = 7;\r\n\r\n        @SuppressWarnings(\"unchecked\") ArrayList<Edge>[] graph = new ArrayList[V];\r\n        createGraph(graph);\r\n        DFS(graph, 0);\r\n    }\r\n\r\n    public static void BFS(ArrayList<Edge>[] graph, int source) {\r\n\r\n        // Add Immediate Neighbours\r\n\r\n\r\n        Queue<Integer> qe = new LinkedList<>();\r\n        qe.add(source);\r\n\r\n        HashSet<Integer> visited = new HashSet<>(); // For Checking, If it's already in there!\r\n\r\n        while (!qe.isEmpty()) {\r\n            int current = qe.remove();\r\n\r\n            if (!visited.contains(current)) {\r\n                System.out.print(current + \" \");\r\n                visited.add(current);\r\n\r\n                // Add all Neighbours of current edge into graph\r\n                for (Edge e : graph[current]) {\r\n                    qe.add(e.dest);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void DFS(ArrayList<Edge>[] graph, int source) { // O(V+E)\r\n        // Keep Going on 1st Neighbour\r\n        DFSHelper(graph, source, new HashSet<>());\r\n    }\r\n\r\n    private static void DFSHelper(ArrayList<Edge>[] graph, int current, HashSet<Integer> Visited) {\r\n        if (Visited.contains(current)) {\r\n            return;\r\n        }\r\n\r\n        System.out.print(current + \" \");\r\n        Visited.add(current);\r\n\r\n        for (int i = 0; i < graph[current].size(); i++) {\r\n            Edge e = graph[current].get(i);\r\n            DFSHelper(graph, e.dest, Visited);\r\n        }\r\n\r\n    }\r\n\r\n    public static void printNeighbours(ArrayList<Edge>[] graph, int index) {\r\n        for (int i = 0; i < graph[index].size(); i++) {\r\n            System.out.println(i + 1 + \" neighbour of \" + index + \" is: \" + graph[index].get(i).dest);\r\n        }\r\n    }\r\n\r\n    public static void createGraph(ArrayList<Edge>[] graph) {\r\n        for (int i = 0; i < graph.length; i++) {\r\n            graph[i] = new ArrayList<>();\r\n        }\r\n\r\n        graph[0].add(new Edge(0, 1));\r\n        graph[0].add(new Edge(0, 2));\r\n\r\n        graph[1].add(new Edge(1, 0));\r\n        graph[1].add(new Edge(1, 3));\r\n\r\n        graph[2].add(new Edge(2, 0));\r\n        graph[2].add(new Edge(2, 4));\r\n\r\n        graph[3].add(new Edge(3, 1));\r\n        graph[3].add(new Edge(3, 4));\r\n        graph[3].add(new Edge(3, 5));\r\n\r\n        graph[4].add(new Edge(4, 2));\r\n        graph[4].add(new Edge(4, 3));\r\n        graph[4].add(new Edge(4, 5));\r\n\r\n        graph[5].add(new Edge(5, 3));\r\n        graph[5].add(new Edge(5, 4));\r\n        graph[5].add(new Edge(5, 6));\r\n\r\n        graph[6].add(new Edge(6, 5));\r\n\r\n    }\r\n\r\n    static class Edge {\r\n        int src;\r\n        int dest;\r\n\r\n        public Edge(int src, int dest) {\r\n            this.src = src;\r\n            this.dest = dest;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ElevenGraphs/Creation/UndirectedUnweightedGraphAdjacencyList.java b/src/ElevenGraphs/Creation/UndirectedUnweightedGraphAdjacencyList.java
--- a/src/ElevenGraphs/Creation/UndirectedUnweightedGraphAdjacencyList.java	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ b/src/ElevenGraphs/Creation/UndirectedUnweightedGraphAdjacencyList.java	(date 1748588809813)
@@ -1,72 +1,26 @@
 package ElevenGraphs.Creation;
 
+import ElevenGraphs.Traversals.Edge;
+
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.LinkedList;
 import java.util.Queue;
 
+import static ElevenGraphs.Traversals.DFSTraversal.DFS;
+
 
 public class UndirectedUnweightedGraphAdjacencyList { // O(V+E)
     public static void main(String[] args) {
         int V = 7;
-
         @SuppressWarnings("unchecked") ArrayList<Edge>[] graph = new ArrayList[V];
         createGraph(graph);
-        DFS(graph, 0);
-    }
-
-    public static void BFS(ArrayList<Edge>[] graph, int source) {
-
-        // Add Immediate Neighbours
-
-
-        Queue<Integer> qe = new LinkedList<>();
-        qe.add(source);
-
-        HashSet<Integer> visited = new HashSet<>(); // For Checking, If it's already in there!
-
-        while (!qe.isEmpty()) {
-            int current = qe.remove();
-
-            if (!visited.contains(current)) {
-                System.out.print(current + " ");
-                visited.add(current);
-
-                // Add all Neighbours of current edge into graph
-                for (Edge e : graph[current]) {
-                    qe.add(e.dest);
-                }
-            }
-        }
-    }
-
-    public static void DFS(ArrayList<Edge>[] graph, int source) { // O(V+E)
-        // Keep Going on 1st Neighbour
-        DFSHelper(graph, source, new HashSet<>());
-    }
 
-    private static void DFSHelper(ArrayList<Edge>[] graph, int current, HashSet<Integer> Visited) {
-        if (Visited.contains(current)) {
-            return;
-        }
+        DFS(graph, 4);
 
-        System.out.print(current + " ");
-        Visited.add(current);
-
-        for (int i = 0; i < graph[current].size(); i++) {
-            Edge e = graph[current].get(i);
-            DFSHelper(graph, e.dest, Visited);
-        }
+    }
 
-    }
-
-    public static void printNeighbours(ArrayList<Edge>[] graph, int index) {
-        for (int i = 0; i < graph[index].size(); i++) {
-            System.out.println(i + 1 + " neighbour of " + index + " is: " + graph[index].get(i).dest);
-        }
-    }
-
-    public static void createGraph(ArrayList<Edge>[] graph) {
+    private static void createGraph(ArrayList<Edge>[] graph) {
         for (int i = 0; i < graph.length; i++) {
             graph[i] = new ArrayList<>();
         }
@@ -94,15 +48,5 @@
 
         graph[6].add(new Edge(6, 5));
 
-    }
-
-    static class Edge {
-        int src;
-        int dest;
-
-        public Edge(int src, int dest) {
-            this.src = src;
-            this.dest = dest;
-        }
     }
 }
Index: .idea/material_theme_project_new.xml
===================================================================
diff --git a/.idea/material_theme_project_new.xml b/.idea/material_theme_project_new.xml
deleted file mode 100644
--- a/.idea/material_theme_project_new.xml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ /dev/null	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="MaterialThemeProjectNewConfig">
-    <option name="metadata">
-      <MTProjectMetadataState>
-        <option name="userId" value="76d52b39:19493a0c426:-7fff" />
-      </MTProjectMetadataState>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ /dev/null	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/libraries/junit_jupiter.xml
===================================================================
diff --git a/.idea/libraries/junit_jupiter.xml b/.idea/libraries/junit_jupiter.xml
deleted file mode 100644
--- a/.idea/libraries/junit_jupiter.xml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ /dev/null	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
@@ -1,17 +0,0 @@
-<component name="libraryTable">
-  <library name="junit.jupiter" type="repository">
-    <properties maven-id="org.junit.jupiter:junit-jupiter:5.9.2" />
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.9.2/junit-jupiter-5.9.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.2/junit-jupiter-api-5.9.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.2/junit-platform-commons-1.9.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.9.2/junit-jupiter-params-5.9.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.2/junit-jupiter-engine-5.9.2.jar!/" />
-      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.2/junit-platform-engine-1.9.2.jar!/" />
-    </CLASSES>
-    <JAVADOC />
-    <SOURCES />
-  </library>
-</component>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ /dev/null	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
@@ -1,18 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="StringTemplateMigration" enabled="false" level="WARNING" enabled_by_default="false" />
-    <inspection_tool class="unused" enabled="false" level="WARNING" enabled_by_default="false" checkParameterExcludingHierarchy="false">
-      <option name="LOCAL_VARIABLE" value="true" />
-      <option name="FIELD" value="true" />
-      <option name="METHOD" value="true" />
-      <option name="CLASS" value="true" />
-      <option name="PARAMETER" value="true" />
-      <option name="REPORT_PARAMETER_FOR_PUBLIC_METHODS" value="true" />
-      <option name="ADD_MAINS_TO_ENTRIES" value="true" />
-      <option name="ADD_APPLET_TO_ENTRIES" value="true" />
-      <option name="ADD_SERVLET_TO_ENTRIES" value="true" />
-      <option name="ADD_NONJAVA_TO_ENTRIES" value="true" />
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ b/.idea/vcs.xml	(date 1748419926181)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_24_PREVIEW\" project-jdk-name=\"openjdk-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ b/.idea/misc.xml	(date 1748419926133)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_24_PREVIEW" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_24" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/ElevenGraphs/Creation/UndirectedWeightedGraphAdjacencyList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ElevenGraphs.Creation;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class UndirectedWeightedGraphAdjacencyList {\r\n    public static void main(String[] args) {\r\n        int V = 4;\r\n\r\n        @SuppressWarnings(\"unchecked\") ArrayList<Edge>[] graph = new ArrayList[V];\r\n        createGraph(graph);\r\n\r\n        // Print 2's Neighbours\r\n        printNeighbours(graph, 2);\r\n\r\n    }\r\n\r\n    public static void printNeighbours(ArrayList<Edge>[] graph, int index) {\r\n        for (int i = 0; i < graph[index].size(); i++) {\r\n            Edge e = graph[index].get(i);\r\n            System.out.println(i + 1 + \" neighbour of \" + index + \" is: \" + e.dest + \". Edge Weight: \" + e.weight);\r\n        }\r\n    }\r\n\r\n    public static void createGraph(ArrayList<Edge>[] graph) {\r\n        for (int i = 0; i < graph.length; i++) {\r\n            graph[i] = new ArrayList<>();\r\n        }\r\n\r\n        graph[0].add(new Edge(0, 2, 2));\r\n\r\n        graph[1].add(new Edge(1, 2, 10));\r\n        graph[1].add(new Edge(1, 3, 0));\r\n\r\n        graph[2].add(new Edge(2, 0, 2));\r\n        graph[2].add(new Edge(2, 1, 10));\r\n        graph[2].add(new Edge(2, 3, -1));\r\n\r\n        graph[3].add(new Edge(3, 1, 0));\r\n        graph[3].add(new Edge(3, 2, -1));\r\n    }\r\n\r\n    static class Edge {\r\n        int src;\r\n        int dest;\r\n        int weight;\r\n\r\n        public Edge(int src, int dest, int weight) {\r\n            this.src = src;\r\n            this.dest = dest;\r\n            this.weight = weight;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ElevenGraphs/Creation/UndirectedWeightedGraphAdjacencyList.java b/src/ElevenGraphs/Creation/UndirectedWeightedGraphAdjacencyList.java
--- a/src/ElevenGraphs/Creation/UndirectedWeightedGraphAdjacencyList.java	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ b/src/ElevenGraphs/Creation/UndirectedWeightedGraphAdjacencyList.java	(date 1748588809805)
@@ -1,7 +1,11 @@
 package ElevenGraphs.Creation;
 
+import ElevenGraphs.Traversals.Edge;
+
 import java.util.ArrayList;
 
+import static ElevenGraphs.Creation.PrintNeighboursUtil.printNeighbours;
+
 
 public class UndirectedWeightedGraphAdjacencyList {
     public static void main(String[] args) {
@@ -15,14 +19,7 @@
 
     }
 
-    public static void printNeighbours(ArrayList<Edge>[] graph, int index) {
-        for (int i = 0; i < graph[index].size(); i++) {
-            Edge e = graph[index].get(i);
-            System.out.println(i + 1 + " neighbour of " + index + " is: " + e.dest + ". Edge Weight: " + e.weight);
-        }
-    }
-
-    public static void createGraph(ArrayList<Edge>[] graph) {
+    private static void createGraph(ArrayList<Edge>[] graph) {
         for (int i = 0; i < graph.length; i++) {
             graph[i] = new ArrayList<>();
         }
@@ -40,15 +37,4 @@
         graph[3].add(new Edge(3, 2, -1));
     }
 
-    static class Edge {
-        int src;
-        int dest;
-        int weight;
-
-        public Edge(int src, int dest, int weight) {
-            this.src = src;
-            this.dest = dest;
-            this.weight = weight;
-        }
-    }
 }
Index: src/ElevenGraphs/Creation/PrintNeighboursUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ElevenGraphs/Creation/PrintNeighboursUtil.java b/src/ElevenGraphs/Creation/PrintNeighboursUtil.java
new file mode 100644
--- /dev/null	(date 1748588809775)
+++ b/src/ElevenGraphs/Creation/PrintNeighboursUtil.java	(date 1748588809775)
@@ -0,0 +1,13 @@
+package ElevenGraphs.Creation;
+
+import ElevenGraphs.Traversals.Edge;
+
+import java.util.ArrayList;
+
+public class PrintNeighboursUtil {
+    public static void printNeighbours(ArrayList<Edge>[] graph, int index) {
+        for (int i = 0; i < graph[index].size(); i++) {
+            System.out.println(i + 1 + " neighbour of " + index + " is: " + graph[index].get(i).dest);
+        }
+    }
+}
Index: src/ElevenGraphs/Traversals/Edge.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ElevenGraphs/Traversals/Edge.java b/src/ElevenGraphs/Traversals/Edge.java
new file mode 100644
--- /dev/null	(date 1748588809785)
+++ b/src/ElevenGraphs/Traversals/Edge.java	(date 1748588809785)
@@ -0,0 +1,18 @@
+package ElevenGraphs.Traversals;
+
+public class Edge {
+    public int src;
+    public int dest;
+    public int weight;
+
+    public Edge(int src, int dest) {
+        this.src = src;
+        this.dest = dest;
+    }
+
+    public Edge(int src, int dest, int weight) {
+        this.src = src;
+        this.dest = dest;
+        this.weight = weight;
+    }
+}
Index: DSA2025.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"junit.jupiter\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DSA2025.iml b/DSA2025.iml
--- a/DSA2025.iml	(revision 0f9ca5cc66d09a150a017a4808d475ff34422ef9)
+++ b/DSA2025.iml	(date 1748588925222)
@@ -7,6 +7,31 @@
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="junit.jupiter" level="project" />
+    <orderEntry type="module-library">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library name="JUnit5.8.1">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
